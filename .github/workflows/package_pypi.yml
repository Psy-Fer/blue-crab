name: Package_Build

on:
  push:
    branches: [ '**' ]
    tags:
      - '*'  # Run on any new tag
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-package-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: make build_dir dir
        run: |
          mkdir -p build_dir && \
          cp test/package/package.sh build_dir/ && \
          chmod +x build_dir/package.sh
      - name: Run package.sh inside Ubuntu 14.04 Docker
        run: |
          docker run --rm -v ${{ github.workspace }}/build_dir:/host/ ubuntu:14.04 /bin/bash -c "
            apt-get update && \
            apt-get install -y git && \
            /host/package.sh docker
          "
      - name: decompress blue-crab tar.gz
        run: |
          if [ -f build_dir/blue-crab-*.tar.gz ]; then
            cp build_dir/blue-crab-*.tar.gz .
            echo "Decompressing blue-crab tar.gz"
            tar -xzf blue-crab-*.tar.gz
          else
            echo "No blue-crab tar.gz found!"
            exit 1
          fi
      - name: quick run
        run: |
          ./blue-crab-${{ env.LATEST_TAG }}/blue-crab --help || exit 1
      - name: Get artifact filename
        id: artifact_name
        run: |
          FILE=$(ls build_dir/blue-crab-*.tar.gz)
          BASENAME=$(basename "$FILE" .tar.gz)
          echo "ARTIFACT_NAME=$BASENAME" >> $GITHUB_ENV
          LATEST_TAG=$(git ls-remote --tags ${REPO_LINK} | cut -d/ -f3 | grep -v '\^{}' | sort -V | tail -n1)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
      - name: Add blue-crab to PATH
        run: echo "${{ github.workspace }}/blue-crab-${{ env.LATEST_TAG }}" >> $GITHUB_PATH
      - name: test
        run: test/test.sh
      - name: Upload blue-crab tar.gz
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build_dir/blue-crab-*.tar.gz
  build-package-macos-x86-64:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: make build_dir dir
        run: |
          mkdir -p build_dir && \
          cp test/package/package.sh build_dir/ && \
          chmod +x build_dir/package.sh
      - name: run without docker
        run: |
          cd build_dir && \
          ./package.sh && \
          cd ..
      - name: decompress blue-crab tar.gz
        run: |
          if [ -f build_dir/blue-crab-*.tar.gz ]; then
            cp build_dir/blue-crab-*.tar.gz .
            echo "Decompressing blue-crab tar.gz"
            tar -xzf blue-crab-*.tar.gz
          else
            echo "No blue-crab tar.gz found!"
            exit 1
          fi
      - name: quick run
        run: |
          ./blue-crab-${{ env.LATEST_TAG }}/blue-crab --help || exit 1
      - name: Get artifact filename
        id: artifact_name
        run: |
          FILE=$(ls build_dir/blue-crab-*.tar.gz)
          BASENAME=$(basename "$FILE" .tar.gz)
          echo "ARTIFACT_NAME=$BASENAME" >> $GITHUB_ENV
          LATEST_TAG=$(git ls-remote --tags ${REPO_LINK} | cut -d/ -f3 | grep -v '\^{}' | sort -V | tail -n1)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
      - name: Add blue-crab to PATH
        run: echo "${{ github.workspace }}/blue-crab-${{ env.LATEST_TAG }}" >> $GITHUB_PATH
      - name: test
        run: test/test.sh
      - name: Upload blue-crab tar.gz
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build_dir/blue-crab-*.tar.gz
  build-package-macos-arm64:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: make build_dir dir
        run: |
          mkdir -p build_dir && \
          cp test/package/package.sh build_dir/ && \
          chmod +x build_dir/package.sh
      - name: run without docker
        run: |
          cd build_dir && \
          ./package.sh && \
          cd ..
      - name: decompress blue-crab tar.gz
        run: |
          if [ -f build_dir/blue-crab-*.tar.gz ]; then
            cp build_dir/blue-crab-*.tar.gz .
            echo "Decompressing blue-crab tar.gz"
            tar -xzf blue-crab-*.tar.gz
          else
            echo "No blue-crab tar.gz found!"
            exit 1
          fi
      - name: quick run
        run: |
          ./blue-crab-${{ env.LATEST_TAG }}/blue-crab --help || exit 1
      - name: Get artifact filename
        id: artifact_name
        run: |
          FILE=$(ls build_dir/blue-crab-*.tar.gz)
          BASENAME=$(basename "$FILE" .tar.gz)
          echo "ARTIFACT_NAME=$BASENAME" >> $GITHUB_ENV
          LATEST_TAG=$(git ls-remote --tags ${REPO_LINK} | cut -d/ -f3 | grep -v '\^{}' | sort -V | tail -n1)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
      - name: Add blue-crab to PATH
        run: echo "${{ github.workspace }}/blue-crab-${{ env.LATEST_TAG }}" >> $GITHUB_PATH
      - name: test
        run: test/test.sh
      - name: Upload blue-crab tar.gz
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build_dir/blue-crab-*.tar.gz
